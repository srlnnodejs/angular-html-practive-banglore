reactive forms
=================
>in this vide lets closer looks reactive forms in angualr
>in reactive forms much of logics are residing in component class
>this is different form template deriven forms which is more focus in html templates
>there is also no two way binding in reactive forms
>instad the name suggest we need to react user input to update  values 
>angualr also provide methods  also update form control  value component class
>we will understand better  we start coding
> reactive forms are suited for complex senario
>now what are such senario
>you might want form field to be dynamics
for example
============
>i will begin form for single field allow user to give phone number also give option
and give additional field to enter alternate phone number
>that is dynamic phone element
>you might also enter custom validation for certain filed
>for password and confirm password
>we might also want validation dynamic
>for instance if we want to subscribe field i want email field to be mandatory
>if user doesnt want to subscribe  email field is opeitonal so dynamic validaiton
>like this case type complex scenarios reactive form must be compulsory
>reactive forms also makes possible for unit tests logic in your type script file code
and class
>now all advantages come across
>reactive forms approch requires more coding as beginner is slightly more difficult
to understand compare to template driven forms
>not warry that is exacly reason for our course of reactive forms
>lets sea how we go to proceed rest of the course
>we will startup brand new project generated by cli
>we will add html the form we working on that >
>ones html complete we will add model of the form for form group and form control
classes
>we will also sea to manage form control values
>that is followed by formbuilder service is simpler way to specify form models
>ones we data exchange happning between template and class 
>we will move on validations
>validaiton will be simple custom cross-field and dynamic validaiton
>we will also sea how to add dynamic form controls
>finally we go reactive form on submitting form controls
>
video no 17
=============
>in this video add html our component template
>keep it simple user creating registrration form
>to get started i have generated angualr project running commands 
ng new reactive-forms
>jsust like template driven forms i have also added bootstrap four class
>lets open app.component.html
>lest begin by removing existing markup
>went app.component.html
>work stated and iam telling you simulteneously what is the work flow
>hadding i will add registration form
>below hadding we start registration from within form tag
>first we add user name 
>first we add form-group inside div tag
>add label username
>and input type text i enter form-control
>here form-group and form-control are bootstrap class
>next form control is for entring the password
>so we have label password and input element type password
>again bootstrap class for form-group and form-control
>similary we have another one for user to confirm password
>so label is confirm-passwrod and input type is password
>finally button for user to submit the form
>button class is btn btn-primary and type is submit 
> and text is register
>save this and take look form in browser
>lets go for terminal and run ng serve
>we will get form for username,password, and confirm password
>we also have submit button for submit registion form
>please note that in html there is no difference between template
driven forms and reactive forms
>the html always component template
>now html template ready and accept inputs to create model for registraion
form it makes data exchange possible between template and class
>form will be
app.component.html
===================
<div class="container-fluid">
<h2>registration form</h2>
<form>
<div class="form-group">
<label>username</label>
<input type="text" class="form-control">
</div>

<div class="form-group">
<label>password</label>
<input type="password" class="form-control">
</div>

<button class="btn btn-primary" type="submit">register</button>

</form>
</div>
video no 18
===========
>all right so far we just added html we havent added any code related to
reactive form so lets get started this video
>in angualr we need able to work with reacive form we need to required 
reactive forms module
>first step we need to open app.module.ts and import reactive forms module
form angualr/forms
>also make sure to add on imports array
>reactive form module gives access of bunches of different classesand dire
ctives that all nessary to build reactive form 
>out of those two classes make up the building blocks for reactive forms
>they are form group and form control
>here reactive forms form represent by model component class
>and to be able to create back model make use form control and form group
classes
>in our demo application we have three field
>username,password,confirmpassword
>each of the form field define instance of form control classes
>and overall form it self in composist define instance of form group 
>basically entire form represent form group and each form field represent
form control
>for a class
>lets understand better with this code
>as we worked before in app.module.ts
how to lloook like
app.module.ts
=============
import{BrowserModule} from "@angualr/platform-browser";
import{ngModule} from "@angular/core";
import{ReactiveFormsModule} from "@angualr/forms";
import {AppComponent} from "./app.component";
@NgModule({
declarations:[AppComponent],
imports:[BrowserModule,ReactiveFormsModule],
providers:[],
bootstrap:[AppComponent]});
})
export class AppModule{};

>next come to app.component.ts in this class we going to create new 
from group instance represent user registraiton form
>registrationForm=new FromGroup()
>make sure to imports the class form @angual/forms
>import {FormGroup} from "@angular/forms";
>next step to initilize for form group with object controls present in the
html
>register form have three form field lets specify them in form group con
structor
>within paranthasis we going to have objects
>this object contains three instance of form control classes
>one for username one for password and finally one for confirm passowrd
> if you wish to have default value any of the form field you can pass
that value in form control constructor
>lets add default value for username field viswas
>now our forms model is ready
so our app.components.ts looks like
===================================
import {component} from "@angualr/froms";
import {FormGroup,FormControl} from "@angular/forms";

@Component({
selectro:"app-root",
templateUrl:"./app.component.html",
styleUrls:["./app.component.css"]
});

export class AppComponent{

registrationForm=new FormGroup({
userName=new FromControl("viswas),
password:new FromControl(""),
confirmPassword:new FormControl("")
})}
})
> next step to associate the above model to view which needed html form
> for that reacive forms module provided certain directives
>on the form tag we use  form group directive and bind registration form
group 
<form [formGroup]="registraionForm">
>to bind each of form control we bind form control name directive
>for username is formContrlNmae="userName"
>for passwordis formControlName="password"
>for confirmPassword is formControlName="confirmPassword"
>so what we have done we created 1:1 assocation  in the formGroup and 
fromControl and corresponding html elements
>entire form associtated [formGroup]="registrationForm"
> and individual form control associated corresponding html elements
>userName password and confirmPassword
>now we have created communication layer between model and view
>to visualize communication we need to interpolate component class to 
view with json pipe
>{{registrationForm.value|json}}
app.component.html looks like
==============================



>now i save this and had to browser 
>you can sea three input field and username field hav viswas as 
specify in formms control
>in bottom you also sea form group value
>username viswas when we type password value will updated similarly
for confirm password as well
>and there we go we have created first reactive form 
>it si preety simple form for serves puprpose 
>for summarize there are three steps to create reactive forms
>first step define html form component template
>second step define form model in component class
> third step use directive provide by reactive forms module to associate
model with view
>at any point of time formgroup.value which can be posted to server to
requeid
>now iam good understanding how reactive form works
>

now the app.component.html
==========================
<div class="container-fluid">
<h2>registraiton form</h2>
<form [formGroup]="registrationForm">
<div class="form-group">
<label>username</label>
<input formControlName="userName" type="text" class="form-control">
</div>
<div class="from-group">
<label>password</label>
<input type="formControlName"="password" type="password" class="form-control">
</div>

<div class="form-group">
<label>confirm password</label>
<input formControlName="confirmPassword" type="password" class="form-control">
</div>

<button class="btn btn-primary" type="submit">register</button>
</form>
{{registrationform.value|json}}
</div>
>there is three step to create html form first step to define htmpltemplate
>second step define your form model your component class
>third step use the derictive provide by  to reactive model to associate 
model with view
>at any point of time formgroup.value provide \
>now we have good understanding how reactive form works
>take look few more concepts about reactive forms
video no 19
============
>in last video we seen how to create registration form using form control
and form group classes
>we learn that form control class is used for individual form element and
form group class used to represent entire form 
>apart form that form group class also can use together different form control
>for example city state and postal control can conme one form group is 
adderess
>lets understand this better with the code
>in app.component.html we going to add three new field
>one for city one for state one for postal code
>all three fields are enclosed with containing div tag
>right after confirm password i added these fields
><div>
<div class="form-group">
<label>city</label>
<input type="text" class="from-control">
</div>
<div class="form-group>
<label>state</label>
<input type="text" class="form-control">
</div>
<div class="form-group">
<laebl>postal code</label>
<input type="text" class="from-control">
</div>
</div>

>containig div tag with three inputs
>one for city one for state one for psotalcode
>now lets update our form model
>we need to add three new instances in form control but i mention is like
a group in address field
>to achivieng we need form group class
>in form.control.html
=======================
address:new FormGroup() 
>we specify object  three form controls
>city state and postalcode
>let add html to bind form control
>
in app.component.ts i have to write 
export class AppComponent{
registrationForm=new FormGroup({
userName:new FormControl('viswas'),
password:new FormControl(''),
confirmPassword:new FormControl(''),
address:new FormGroup({
city:new FormControl(''),
state:new FormControl(''),
postalCode:FormControl('')
})
})
}
>goback to app.component.html make use formControloName directive
>one is city state and other is postal code
>to enclosing div tag name is address in address form group
>so now angular treats now new div tag in form gourp now map form control
>to the form control within address form group
>city state and postal code
>let me move interpolation of top of the form
>if you take browser you can sea form vlaues
>city state and postal code are group in to a object
>named as address
> when building compolex form managing different area of information
>easier in smaller sections
>in such senario use nested form group break large forms
>smaller and more managable onse
>in next video we sea managing form contrl and form groups
video no 20
=================
>in this video we need to set form control values with out user interaction
>that is setting values programmatically
>for example we might have to return form data from backend api and servies
>update form control to new values
>we can do that using set value methodsby reavctive forms
>let take a example
>we set default value of user name field
>specifying value for form control constructor
>instead let set values for different form controls automatically
>in html wee need to cfreate new button for load api data
>button so load api data
>class is button <button class="butn btn-secondry">load api data</button>
>left margin ml-2
>type=button
>on click button iam going to invoke loadapi method
>lets define this metod in the class
>the button like bee
<btton class="btn btn-secondry ml-2" type="">load api data</button>
>on click button iam going to invoke load api method
>lets define this method in the class
>app.component.ts
================
loadApiData()
{



}
>this method going to set different form control values
>setting vlaue progammatically we have set value method
>set value called either in form control calss or form group class
>frr our purpose wee need to call registration form group
>in the method we need to write 
loadApiData()
{
this.registrationForm.setValue()
}
set value method accepts objects that matches structure of form group
>contrl as kyes
>we have userName:Bruce
and password and confirm password test
>address and city 
city as city and state as state and psostal code 123456

loadApiData(){
this.registrationForm.setVlaue({
userName:'bruce',
password:'test',
confirmPassword:'test',
address:{
city:'city',
state:'state',
postalCode:'123456'
}})}

>so exact structure of registarion form group like will be
>if you save this and goback to browser click on load api data and you
can sea form control populateed the dummy data
>we have all data all username password city and state and postalcode
>lets say we need to populate username and password not address field
>in the code iam going to remove address key form setVlaue method
>now iam get back browser and click load api data we sea it doesnt work
>if you open console you can sea error 
>must supply value address with form control
>so set value very strict mainting structure of form group
>you have to pass all form control values
>if do you have set values for only of filds little can make use patch value
method 
>go back to vs code change set value to pathch value
>and parameter be a object contain few of formcontrl is necessary
>now i complettly remove address object and iam go back click on load apidata
method 
>we can sea only we set vlaues for user name for input fields
>so set vlaue and pathch value really important when we use api as service
>set value is used to we need to set all vlaue of from control
>patch value to be used to set few value of form control
>all right that is managing form control for component class
>for reactive forms
>while we doing set value or patch value the data populating in template
output 

video no 21
=-=========
>so far we seen how to create form model using form group and form control
classes
>but you can sea creating multiple form control manually become very repetative
>to avaoid this angualr provide from builder service interns providing 
methods providing genreating form controls
>we will still be creating instances of form control just like how we doing
right now with much lesser code
>in this video lets refactor our code and utilize form builder service  create
a form model
>now i mentioned form builder is a service
>first step import service and injected in to the constructor
>instead of FormGroup and FormControl i need to import formbuilder
>and then constructor lets injected
>
constructor(private fb:FormBuilder)
>second step use this instance of form builder service to generate form 
control
>so let me comment out existing model 
>create one using formBuilder service
>registrationForm=this.fb.group to create form group we called group 
metthod
now the form will be
i wil show end or midde seure
>group method takes object for different form control keys
>so first key is username
>this time the value is an array
>the zeroth index value is defauult value
>to be want user name viswas is default one
>similary password and confirm password
>next we have address
>address will be another form group
>so again we need to call group method for from builder instance
is this.fb.group 
>it retruns takes object and again form controls are key
>so objects we has form control has keys
>city state and postal code
>if you save this and take look in browser 
>you can sea the default vlaue of viswas for username field
>when typing value of other form control you can sea on the top the
value can updated in form model
>form builder nothing but simple alternative of formgroups and form
controls
>and we will be stiking this form builder way of createing form control
for rest of the code
>alright so far we seen how creat models
>associtte with form html
>set default values and also set form control valuees programatically
>next lets take look validation in reactive form
lets look how form looks like
=============================
app.component.ts
================
import{Componetn} from "@angualr/core";
import{FormBuilder} from "@angular/froms";
@Component({
selector:"app-root",
templateUrl:"./app.component.html,
styleUrls:["./app.component.css]});

export class AppComponetnt{
constructor(private fb:FormBuilder){}
registraitnForm=this.fb.group({
userName:['viswas'],
password:[''],
confirmPassword:[''],
addrss:this.fb.group({
city:[''],
state:[''],
country:['']
}})

loadApiData(){
this.registrationForm.setVlaue({
userName:'bruce',
password:'test',
confirmPassword:'test',
address:{
city:'city',
state:'state',
postalCode:'123456'
}})}





}


