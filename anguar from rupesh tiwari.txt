fullstack master 
====================
video no 32 about session based authentication
----------------------------------------------
>type of authentication in anguular, first we have to sea how many type
authentication are there
>what are there advantages and dis advantages how jwt is more good compare to
all of this
>jwt is famous as compare to all morden web application in jwt based authentication
>many google face book and twitter used jwt auth system
>we have two types of authenticaiton one is session based authentication and
other is cookie based authentication and third one is jwt based authenticaiton
session based authenticaiton
============================
> when request going from client to server when login it says and you passed
your user id and password server will authenticate and will create it will 
create session key and it will pass to the client
>>next time client will recieve session key
>ones you recieve that server will except that next time onwards which ever 
request you pass to server you have to pass the session key in order to 
retrive your session if next time you send get product this is my request
get products
>in this request in header you pass the session key in your request match
object to the server in this http post or get you need to pass the session key.
>thats what server will recognize you and tell i have created key for you
>iam creating key for you and you are sending same key now you are authorized
user, now you are authorized for any kind of resource you are asking for
>then server will authenticate your user and allow to user to access your 
end points
>problem in session funda is lets sea your server side if you have lot of 
request coming normally what we do we create 2 to 3 servers , imagine that
you have server side and you have  server 1, server2 and server3 like that
>there is load balancer in server what load balance does if many request come
>if request one and request 2 somany request coming and server1 responding
all reqest at same time if more request rises
>then load balancer will check which server available then load balancer will
give that more request to server 2 and server 3 like that
>similarly request devide into among all servvers
>suppose request r1 hitted server1 and sever1 released session key for r1
>then server1 is busy when r3 came in same user at that time server1 busy with
serving for some other request lets say r4 if server1 currently taking care of
r4 then request r3 send from same user who has session key generated by server1
>now load balance will sea r3 is coming and server1 busy with some other request
>lets say server3 available its send server3 request3 coming from same user
>guess what will  happend r3 request going to server3 session key already coming
with with request r3 is already generated by server1
>like that your are going to movie you  get ticket they will virify your 
dl and identify you after that they will give wrist band when you go out
and open your wrist band and go out 
>again i dont show your tickeet again not requied verify your dl  next time
>you come i will sea your wrist band to identify you that wrist band is session 
key  in order to indetify this guy so it is the identificaiton symbol 
given by the other same guy
>that you are identify to understand the concept this is the server who
want to identify you as client there are so many client  to indentify the 
client server has to give the session key to the client
>and every time it has come with same session id

problem is when session key with client how ever multiple servers
------------------------------------------------------------------
>then we go to cookie based and json based authentication
>in sessionb based authenticaiton you have server s1 s2 s3  we scalling our
server if there are lot of request are coming like your face book if 
so many peoples are like your photo if your server is s1 mins is hang your 
server
>it will say iam still processin iam still processing other request 
>we scale our applicaiton by putting more servers
>when we run same applicaiton all over server and they put the load balancer
>there is concept calld as load balancer load balancer is software is knows
how to manage the server
>it has some threshold ok s1 can handle 20 request  load balancer knows
if it is more then 20 i will send into s2
>there is many startergy this is one simple startergy i told you
>ther will be may round robin startegry alway go one by one one by one
>those are the startegrgy like we will not go tthat details
>high lever concept of load balance is to balacne load eache server 
>every server in balacne condition that it willl take care 
>her problem is how handle session based authentication in this type of 
distributed system
>here is distributed system where now two ore three place your apps are running
> you identify user a  he has first trying to login your applicaiton 
>enter user id and password and login
>he puts data and login load balancer sea every body now oepn send request to
server1 and server1 get request1 and fist time when you login server has
to create the session key for the user a for the next time user a will come
with session key, server created session key and responded back to user session
key and response goes to user a
>next time user a trying to submit request r2 imagine that there is another 
request r3 came from user b  at that time request r3 coming and server 1 already
handlling request r3 at same moment r2 came from user a and he has same 
session key which was initiated by server 1 then load balancer will say 
threshold is burn server 1 is busy imagine request goes  to server 3 now 
our req2 is coming with server 3 with session key and server 1 will say 
hai i already loggied in i dont know how many server you have  iam refreshing
my page and i have logged in  i dont to be kicked out problem here is 
the session key no more in server3 because server are independent  there own
sesssion key right session is more applicaiton level store
>too problem iss here is no session key in server3 will tell i dont know your
>and it says authenticaiton error arrived your are not authorized
>   this a guy is thinking what going wrong this is the problem for session
>how ever  there are  solution i dont tell this is un solved problem
>out of the process you can save the session there is distributed session 
>there is many other options are you have
>we solve this problem this is solved already now problem is i try to
describe is is extra work you have to do , you have to do out of the process
session storage
>or you have to do sql database you store the session
>or you do distributed session some other library
>if you have large server you have distributed architecture  you considering
to use session based authenticaiton then you have to consider this
>aiter you store your sesision not in hte server  put it into some other process
>put it into some another server
>in pool server is called out of process session is maintianing another server
for session


video no 33
================
cookie based authentication
============================
>in cookie based authentication what happend here when client send request
to server server will cereate unique id for client and it puts cookie of the
response
>it push cookie obejct to response and it goes to client and cookie object
store some data that goes to client
>when ever client next time send request it will pass same cookie in its
header in that message and theen as for as cookie not expried it goes to any 
server that is fine and they will find the data they will identify the user.
> what is problm with cookie there same cookie will work for multiple server
>problem in cookies are cookie will store in client machine
>when you send cookie browser will store cookie in your storage
you remember some browser you open you will ask accept about cookie store
>initially they not asking now they asking they will say iam going to store
some cookie data are you ok
>problem in this lot of time some bad server and some bad resourses will put
some virus your compurter there is a risk is first thing
>many peopole avoid this even thoug every day i will authenticate no problem
>second problem is cross request  shifiting
>what happend by default cookies goes to header of every message you send
>there is chance to hack your cookie data to some other side
>oness you loging chess bank you get coookie you take that cookie now it is your
laptop
>now it is saved in your laptop
>next you went to some other website and there you open some page
>some one write code and they can get cookie form your
>they will get all your details and they will go chessside and use your details
>so ther are this kind of risks this is called as cross side scripting
>you can sea same cookie different differnt website
>when we sending request server side how can we know we recieving same cookie
>what request we sending to the server server knows that this is the cookie
>that i say you have to store cookie some where your server so next time
the request come you verify that cookie matching
>but cookie has to be save to some where there are many softwares are 
available you intercept your pipeline in server every time request come 
you intercept request get cookie available and verify cookie good
>your server or your database some where then you are good
>question
as iam client iam requesting to server and server producing me a cookie
>how could i know i got same cookie what i requested
>some other users might send request and might send their cookies instead
of mine
>in server side ok in server side some dedicated data base where you store
your cookie one and data
in data base you stored your encrypted cookie data
>cookie 1 and cookie 2 in data base you can save like this type of data
>when request come to server you can identify the cookie
>if cookie present in data base if present then decode it and give information
>if there are many users then many cookies are saved here
>and there have own expire and every thing
>if they are expired they are redirect to login page
>thees are the things another two disadvantages like this
>one it stores in machine other is is crosss side sifting issue
>and third is if you like to scale your apis for the mobile devices
>for your ios or android this kind of devices if you use your web apis
>then problem is some of devices are dont support cookies some of them
so this willl not work on them
>these are the restriction of cookie based authentication next we go jwt 
token based authentication


video no 47
===================
>in client side angualr side we say that any message goes has to be 
intercepted and token has to be putted in  header
>that will make sure by putting  http interceptor in app level service
>similarly form server side any http message coming we need to intercept
before it goes to any particular resource area before it goes to 
any product routes or authentication route   or user route which ever 
route you want to go
>before it goes you have to do this auth work now question arrises who
will do all of this showld i write entiee code or  i wil take some help
>beccause this interception is not easy task
>like if google thing you need intercept differently  if other thing
you need to intercept other way all code you dont need to write
>any question before what i want to do
>this is the conecpt that is valid for any kind of server if it is c# or
sql server same thing we have to do
>in c# we have http module
>they called it http module which is basically nothing but which is intercept
>what is http module in c# it intercept the pipeline and it get request object
out of this
>in server side this is http moduel and it intercepting http request and you
take http request and you do same thing
>then what are thing we have discuss it holds any technology
>in order to create jsonwebtoken we need to use jsonwebtoken library
>in order to intercept the we need some library teh famous is one is passport
>passport mins what it should have your information or details
>fi you go passport.org or passport in npm you search its a huge basically
node package like very famous one  they have there own website passport
>and it has many other plugins passport npm you search  like for google
facebook for every one they have
>question is which one use for intercepiton is passport 
>in ordr to crete we use json webtoken
>these are the two library we are focusing on or node library
>next we explain how the passport works how we hookup into  nodejs and iam
giving all of you this knowledge because when i do coding at that time
it is huge to graps everything lets goo passport js is famous one 
now days every one use is wildly

video no 48
===============
>now we will sea which library used to authenticate authenticate any type
request coming using json web token and famous one is passport thing
>you can sea lot of download here is one famous one
>example of passport is is express js compitable in meanstack we normally
use express js for our server in express js they have funda mental block
example middleware fundamental block in express js
>what is middle ware is you can intercept any type of request and response 
what ever you want and also you can build custom interceptor right.
>who can intercept tthat those are the middlewares,now passport is the middleware
just imagine is one of the middleware passport is middleware form  edxpress
point of view we will use passport is middleware we saying app.use there
will put passport function core part of passport is passport has some other
middlewares which is plugin in passport itself.
>the role of passport is to get the token you decoded ones you decoded 
you make a call all of the function which you want to execute that is what 
passport will doit it is allow you the oppurtunity where you do all this
>it allow to you opprutinity to decode token and all do tthat
>so it automatically intercept header and it grab token from it
>it will do for you and you no need to do for that
>and then it will give you take token and dow what you want to do 
>then you will say json web token decode it and go to mongodb go to se
user exist or not and comeback.
>second thing you do with passport is this is your local starteregy  to do
the endpoint thing right there is two startegry one is json webtoken startegry
or local strtergy ,there is many startergy in passport but iam discussing 
only two startergy one is local and other is jwt
>and name saying local mins intercept the request get email id and passoword
out of this
>lets sea you are first time you are trying to login at that time you 
will get emaiil id and password because you dont know jwt at the time
>but you need oppurtinity to intercept that kind of request and take email
id passoword and authenticate finally create json web token and return token
out of itin local startergy you just get user like this
>in jwt startergy you just get intercept request or get email id passowrd 
or different thing jwt staretergy mins is revisit startergy in local mins 
is login startergy  frist time you login or register
>local mins first time you trying to login or registe you need to afcturela pass the
data to server and server has to intercept request get email id and password
out of this and try to create token out of this
>here you are creating token in jwt startergy you assuming token is coming in the
request take the token and get the user
>final goal is user should be there for next pipe line happen
>when ever http request coming from the token get user put into request object
>so that it goes to some project ro some where you should have request.user
>for example you going to product route you should have request.user
>who will put user object in request this middle ware this middle ware
>this middle ware job is intercept request get the token and from the token
get the user and put that user object to request object again so that it 
goes to next resourses it goes to product route or some other routes
>like that i told you it is intercept it is road there is one single rolad
where message is coming
>this middleware is in server side
>that interceptoor is in client side in server side this interceptor will come
>it will take message form message it take token out of header then all of the
startergy we discussed we ask jsonweb token to decode it and get user object
out of this ones you get user object put that user object to message back
>in the reqeust object then request comes to if you will say product 
it will go product in product controller you will check my request.user 
and what is id of user and what are the product of fo user  purchased
>we can do all of those for that customer you can do many thing ones you 
get customer id and user id  you can fetch his order all of thing how do 
you get customer id customer id coming in the form of token
>in token you have it  and you validate here 
>tthere is two thing how to login and the person cokming with token how to
validate it  there are two concern so there fore  passport have two 
different middle ware that you have used it has many middleware but 
we are saying that have two middleware we intrested in it 
>1.passport-local-it is going to use local data base to get user object
 
>passport-jwt

>if you use social medea you use facebook you can use that this is nice 
you can use all of them  and they are all of free
>now we using passport loca when we login first time you can do you can
check you in data base in local
>and then we use passport jwt  in order to validate the jwon web token
>in server side we use to create other folder called as middleware 
>so that we have not written any middleware like this
>we create middelware like this  will call this passport.js to do both 
local and jwt 
>in client side we create folder like http interceptor
>we wll introduce client side called auth header interceptor.js
>and ther will do all interceptor logic
>so this is client side interecptor and this is server side logic
>and here goes passport related stufs in server side
>in client side goes all angualr stufs 
>

>
>